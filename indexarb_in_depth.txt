
## What is Hedge ?
Hedge is an investment to reduce the risk of adverse price movement in an asset.
Normally, a hedge consists of taking an offsetting position in a related security, such as a futures contract.

- example
CSI500 index price = 16K
CSI500 ETF price = 16K
CSI500 index future price = 16K

Buy: ETF, Sell: Futures as hedge

Case 1: CSI500 index price goes up by 1% (16160)
- earn 160 points from ETF => 16160 - 16000
- lose 160 points from futures
- Net earnings = 0

Case 2: CSI500 index price goes down by 1% (15840)
- lose 160 points from ETF => 15840 - 16000
- earn 160 points from futures
- Net earnings = 0


--------------

## What is Arbitrage ? (Special case of hedge)
Arbitrage is simultaneously buy and sell of an asset to profit from difference in the price.
It is a trade that profits by exploiting the price differences of related instruments on different markets or in different forms.

- example
CSI500 index price = 16K
CSI500 ETF price = 16K
CSI500 index future price = 16200

Buy: ETF, Sell: Futures as hedge

Case 1: CSI500 index price goes up by 1% (16160)
- earn 160 points from ETF => 16160 - 16000
- earn 40 points from futures => 16200 - 16160
- Net earnings = 200

Case 2: CSI500 index price goes down by 1% (15840)
- lose 160 points from ETF => 15840 - 16000
- earn 360 points from futures => 16200 - 15840
- Net earnings = 200


--------------

## What is IndexArb ?

- IndexArb automates Futures Index Arbitrage and ETF market making
- Actively quote Futures / ETF and arbitrage the spread opportunites

- Quote component
Place simultaneous passive buy/sell limit orders for ETF/Futures and maintain the bid/ask size

- Hedge component
When the Quote order execution amount exceeds a delta trigger range, a hedge order (either a cash basket or Futures) is fired

- Supported Quote/Hedge Pairs
ETF vs Futures
Futures vs Cash Basket
ETF vs Cash Basket
Futures vs Futures

# Quote Component example

CSI500 ETF as quote
CSI500 index future as hedge


Steps to quote:
===================

1. Calculate theoretical price of quote and hedge symbols, from base symbol which is CSI500 index
TheoPrice_ETF = NetAssetValue * ( 1 + (CashRatio * LeverageRatio) * (Index_Last / Index_PrevClose - 1) )
TheoPrice_Future = (Index_Last + HedgeCarryCost) * ETF_Multiplier

2. Calculate theoretical spread
Theo_Spread = TheoPrice_ETF - TheoPrice_Future

3. Calculate ETF theoretical market price (bid/ask) of quote symbol which is CSI500 ETF
TheoMarketPrice_ETF_Ask = Theo_Spread + (Futures_Ask * ETF_Multiplier)
TheoMarketPrice_ETF_Bid = Theo_Spread + (Futures_Bid * ETF_Multiplier)

4. Trader inputs ETF Bid or Ask Spread => BidSpreadIndexPoints or AskSpreadIndexPoints

5. Calculate final ETF quote price (bid/ask)
QuotePrice_ETF_Ask = TheoMarketPrice_ETF_Ask + AskSpreadIndexPoints
QuotePrice_ETF_Bid = TheoMarketPrice_ETF_Bid - BidSpreadIndexPoints

- basic idea is to calculate final ETF quote price (step 5) and compare with actual ETF market "best" bid / ask price

- Join "ETF Best Ask" if QuotePrice_ETF_Ask (step 5) <= "ETF Best Ask"
because we assume that ETF is over-priced in market (short)

- Join "ETF Best Bid" if QuotePrice_ETF_Bid (step 5) >= "ETF Best Ask"
because we assume that ETF is under-priced in market (long)

===================

## example - so should understand theoretical price vs actual market price

using ETF "Ask"

Assume
# Theoretical spread calculation:
- Step 3: ETF theoretical market price ask, TheoMarketPrice_ETF_Ask = 120
- Futures theoretical market price ask, Futures_Ask = 100
- Theoretical market price spread = TheoMarketPrice_ETF_Ask - Futures_Ask => 20

- Step 4: ETF Ask spread input by trader = AskSpreadIndexPoints => 10
this is market making spread which trader has been doing

- Step 5: QuotePrice_ETF_Ask = TheoMarketPrice_ETF_Ask + AskSpreadIndexPoints => 120 + 10 => 130

# Market price available:
However, ETF actual market Price ask = 135
This is arbitrage opportunity => Join "ETF Best Ask" to short
because we think ETF is overpriced = 135 - 120 => 15 arbitrage profit

======================

## How to Join?

# Leap-Frog Pegging
- The quote component continually adjusts buy/sell orders on the exchange
It means that whenever a fill happens, need to send additional orders to "adjust" the Bid/Ask Size
- This adjustment is done by a method Leap-Frog Pegging:
orders on the front level are moved to the back level, and vice versa
advantage is the middle levels are not touched, preserving the exchange queue position

- example:
Order Book

Price|Qty
104.0
103.0|10, 45
101.0|90
100.0|20, 60, 200
97.0|30, 70
96.0|80, 200, 100

Suppose if Quote Price change from 96.0 to 97.0 => we need to adjust the display size
Cancel all the 3 orders at 96.0 and send those orders with same qty at best bid price - 104.0 price (103.0 + (97.0-96.0))

Suppose if Quote Price change from 97.0 to 96.0 => we need to adjust the display size
Cancel all the orders at best bid price (104.0) and send those orders with same qty at 96.0 price (97.0 - (97.0-96.0))


##################
# Hedge Component
##################
- if executed position of Quote is >= MaxDelta (pre-configured to a value) => Hedge orders are triggered to fire
- quote is prevented from reloading until Hedge is sufficiently filled

# Strategies:
- market making mode
Net the delta of the quote asset => meaning that buying and selling qty offset each other
- arbitrage mode
do not Net the delta => meaning both buy and sell fill qty will sum up

# Steps to Hedge (arbitrage mode only):
1. Calculate Exec Delta (Quote/Hedge orders that has been filled on the exchange)
sum(quote fills + hedge fills)

QuoteFills = (QuoteBuyExecQty - QuoteSellExecQty) * TheoPrice * LeverageRatio * FuturesContractMultiplier
HedgeFills = sum( (HedgeBuyExecQty - HedgeSellExecQty) * TheoPrice ) * FuturesContractMultiplier
ExecDelta = QuoteFills + HedgeFills

2. Calculate Order Delta (ExecDelta + unexecuted hedge orders)

QuoteSellExecDelta = -QuoteSellExecQty * TheoPrice * LeverageRatio * FuturesContractMultiplier
HedgeBuyOrders = HedgeBuyTotalQty * TheoPrice * FuturesContractMultiplier
=> OrderDeltaSB = QuoteSellExecDelta + HedgeBuyOrders

QuoteBuyExecDelta = QuoteBuyExecQty * TheoPrice * LeverageRatio * FuturesContractMultiplier
HedgeSellOrders = HedgeSellTotalQty * TheoPrice * FuturesContractMultiplier
=> OrderDeltaBS = QuoteBuyExecDelta + HedgeSellOrders

3. When to Hedge?
- if OrderDeltaBS > MaxDelta,  send sell Hedge orders until OrderDeltaBS <= MaxDelta
- if OrderDeltaSB < -MaxDelta, send buy Hedge orders until OrderDeltaSB >= -MaxDelta

- Quote cannot reload on the bid side if ExecDelta > MaxDelta
- Quote cannot reload on the offer side if ExecDelta < -MaxDelta

4. How to Hedge?
- Fire and Forget
When an order is placed by Hedge Component, it trades independently of other logic

- Full order qty
Hedge Component posts full order quantity in one tranche at the calculated price level

- Order Book Ratio
If ratio of level 1 quote (bid/ask for buys and ask/bid for sells) exceeds the user specified value,
the strategy will cross the spread with all qty

- Timer
If bid-ask spread is greater than 1 tick, every X seconds,
the child order price should be amended to be 1 tick more aggressive in price (but never cross the spread)

- Bid chasing
Hedge component always chases the best bid/offer

====================

## Hedge Component - example

- Stock X has
best offer = 302
best bid = 300
tick size = 1

- Strategy
Timer = 30 seconds
OrderBookRatio = 2

- Place a buy hedge order for 1000 shares
- Hedge component first places the entire qty at best bid, 300
- After 30 seconds, check bid-ask spread = 2 which is greater than tick size of 1
=> the hedge component amends it's child order to 301






